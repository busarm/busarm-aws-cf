AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: NAT Gateway'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack
      - ParentAlertStack
    - Label:
        default: 'NatGateway Parameters'
      Parameters:
      - AZ
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on wecari-vpc.yaml template.'
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on wecari-alert.yaml template.'
    Type: String
    Default: ''
  AZ:
    Description: 'Availability zone.'
    Type: String
    Default: A
    AllowedValues:
    - A
    - B
    - C
    - D
Conditions:
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
Resources:
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 'EIP.AllocationId'
      SubnetId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnet${AZ}Public'}
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-NatGateway${AZ}'
  Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-RouteTablePrivate'}
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  AlarmNatGatewayErrorPortAllocation:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub 'NAT gateway ${AZ} could not allocate a source port'
      Namespace: 'AWS/NATGateway'
      MetricName: ErrorPortAllocation
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: NatGatewayId
        Value: !Ref NatGateway
  AlarmNatGatewayPacketsDropCount:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub 'NAT gateway ${AZ} dropped packets'
      Namespace: 'AWS/NATGateway'
      MetricName: PacketsDropCount
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: NatGatewayId
        Value: !Ref NatGateway
  AlarmNatGatewayBandwidth:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      AlarmDescription: !Sub 'NAT gateway ${AZ} bandwidth utilization is over 80%'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
      - Id: 'in1'
        Label: 'InFromDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesInFromDestination # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'in2'
        Label: 'InFromSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesInFromSource # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'out1'
        Label: 'OutToDestination'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesOutToDestination # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: 'out2'
        Label: 'OutToSource'
        MetricStat:
          Metric:
            Namespace: 'AWS/NATGateway'
            MetricName: BytesOutToSource # bytes per minute
            Dimensions:
            - Name: NatGatewayId
              Value: !Ref NatGateway
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Expression: '(in1+in2+out1+out2)/2/60*8/1000/1000/1000' # to Gbit/s
        Id: 'bandwidth'
        Label: 'Bandwidth'
        ReturnData: true
      Threshold: 36 # hard limit is 45 Gbit/s
      TreatMissingData: notBreaching
Outputs:
  TemplateID:
    Description: 'Wecari template id'
    Value: 'vpc-nat'
  TemplateVersion:
    Description: 'Wecari template version.'
    Value: '1.0'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
    Export:
      Name: !Sub '${AWS::StackName}-StackName'
 
  IPAddress:
    Description: 'The public IP address of the NAT gateway.'
    Value: !Ref EIP
    Export:
      Name: !Sub '${AWS::StackName}-IPAddress'
