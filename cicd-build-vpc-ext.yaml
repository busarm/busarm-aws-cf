AWSTemplateFormatVersion: '2010-09-09'
Description: 'CI/CD - Build only with VPC support from external source like Github'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack 
      - ParentAlertStack
    - Label:
        default: 'CodeBuild Parameters'
      Parameters:
      - AZA
      - AZB
      - SubnetsReach
      - CodeBuildDesc
      - CodeBuildSpec
      - CacheBucketName
      - ConcurrentBuildLimit
      - TimeoutInMinutes
      - QueuedTimeoutInMinutes
    - Label:
        default: 'CodePipeline Parameters'
      Parameters:
      - ArtifactBucketName
      - SourceConnectionArn
      - SourceRepoId
      - SourceBranchName
    - Label:
        default: 'Global Tags'
      Parameters:
      - ENV
      - SYS
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc.yaml template.'
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on alert.yaml template.'
    Type: String
    Default: ''

  AZA:
    Description: 'Use Availability Zone A (Choose at least one AZ)'
    Type: String
    Default: true
    AllowedValues:
    - true
    - false
  AZB:
    Description: 'Use Availability Zone B (Choose at least one AZ)'
    Type: String
    Default: true
    AllowedValues:
    - true
    - false
  SubnetsReach:
    Description: 'Should the code build container have access to the Internet ? If so, put it in a private subnet with NAT Gateway. If public, then no internet access'
    Type: String
    Default: Private
    AllowedValues:
    - Public
    - Private 
  CodeBuildDesc:
    Description: 'Description of the CodeBuild Project'
    Type: String 
    Default: 'Build Project to build app from external source'
  CodeBuildSpec:
    Description: 'The build specification for the project. e.g myspec.yml. If empty, then the source code must contain a buildspec.yml file at the root level.'
    Type: String 
    Default: 'buildspec.yml'
  CacheBucketName:
    Description: 'Name of S3 Bucket to use to cache Codebuild dependencies. Ignore if you prefer not to cache'
    Type: String 
    Default: ''
  ConcurrentBuildLimit:
    Description: 'Max number of concurrent builds to allow'
    Type: Number 
    Default: 1
  TimeoutInMinutes:
    Description: 'Max build timeout in minuites'
    Type: Number 
    Default: 30
  QueuedTimeoutInMinutes:
    Description: 'Max build queue timeout in minuites'
    Type: Number 
    Default: 10

  ArtifactBucketName:
    Description: 'Name of S3 Bucket to use to store Pipeline Artifacts'
    Type: String 
  SourceConnectionArn:
    Description: 'Arn for source connection. e.g arn:aws:codestar-connections:eu-west-2:xxxxxx:connection/xxxxxxxx-xxxx-xxxxx-xxxx. See https://console.aws.amazon.com/codesuite/settings/connections to create new connection'
    Type: String 
  SourceRepoId:
    Description: 'Source owner/repo. e.g gadana1/my-web-app-v1'
    Type: String 
  SourceBranchName:
    Description: 'Source brance name to deploy. e.g master'
    Type: String
    
  ENV:
    Description: 'Specify Environment to deploy Resource (dev,staging,prod)'
    Type: String
    Default: 'dev'
    AllowedValues:
    - 'dev'
    - 'staging'
    - 'prod'
  SYS:
    Description: 'Specify type System the resource is associated with this Resource (backend,frontend,both)'
    Type: String
    AllowedValues:
    - 'backend'
    - 'frontend'
    - 'both'
  
Conditions:
  HasAZA: !Equals [!Ref AZA, 'true']
  HasAZB: !Equals [!Ref AZB, 'true']
  HasCacheBucketName: !Not [!Equals [!Ref CacheBucketName, '']]
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]

Resources:

  # Codebuild Role
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 's3:*'
                - 'ecr:*'
                - 'secretsmanager:*'
                Effect: Allow
                Resource: '*'

  # Codebuild Project
  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Ref 'AWS::StackName'
      Description: !Ref CodeBuildDesc
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: !Ref CodeBuildSpec
        InsecureSsl: false
      SecondarySources: []
      SecondarySourceVersions: []
      Artifacts:
        Type: CODEPIPELINE
      SecondaryArtifacts: []
      Cache:
        Type: !If [HasCacheBucketName, 'S3', 'NO_CACHE']
        Location: !If [HasCacheBucketName, !Sub '${CacheBucketName}/${AWS::StackName}', !Ref 'AWS::NoValue']
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
        - Name: AWS_ACCOUNT_ID
          Value: !Ref 'AWS::AccountId'
        - Name: AWS_REGION
          Value: !Ref 'AWS::Region'
        PrivilegedMode: true
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: !Ref TimeoutInMinutes
      QueuedTimeoutInMinutes: !Ref QueuedTimeoutInMinutes
      ConcurrentBuildLimit:  !Ref ConcurrentBuildLimit
      Tags:
      - Key: ENV
        Value: !Ref ENV
      - Key: SYS
        Value: !Ref SYS
      VpcConfig:
        VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
        Subnets: 
        - !If [HasAZA, {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetA${SubnetsReach}'}, !Ref 'AWS::NoValue']
        - !If [HasAZB, {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetB${SubnetsReach}'}, !Ref 'AWS::NoValue']
        SecurityGroupIds:
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SecurityGroup'}
      BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub 'aws/codebuild/${AWS::StackName}'
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false

  
  # CodePipeline Role
  CodePipelineRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
          Version: '2012-10-17'
        Path: /
        Policies:
          - PolicyName: CodePipelineAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action: 
                  - 'logs:*'
                  - 's3:*'
                  - 'events:*'
                  - 'codestar:*'
                  - 'kms:*'
                  - 'ecs:*'
                  - 'sns:*'
                  - 'cloudwatch:*'
                  - 'codebuild:*'
                  - 'codedeploy:*' 
                  Resource: "*"
                  Effect: Allow
                - Action:
                  - 'iam:PassRole' 
                  Resource: "*"
                  Effect: Allow

  # CodePipeline              
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      ArtifactStore:
        Type: S3
        Location: !Sub '${ArtifactBucketName}'
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          Region: !Ref 'AWS::Region'
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeStarSourceConnection
            Version: '1'
          RunOrder: 1
          Configuration:
            ConnectionArn: !Ref SourceConnectionArn
            FullRepositoryId: !Ref SourceRepoId
            BranchName: !Ref SourceBranchName
            OutputArtifactFormat: "CODE_ZIP"
          InputArtifacts: []
          OutputArtifacts:
          - Name: SourceArtifact
          Namespace: SourceVariables
      - Name: Build
        Actions:
        - Name: Build
          Region: !Ref 'AWS::Region'
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 1
          Configuration:
            ProjectName: !Ref CodeBuildProject
          InputArtifacts:
          - Name: SourceArtifact
          OutputArtifacts:
          - Name: BuildArtifact
          Namespace: BuildVariables

  # Code Pipeline Notification Rule
  CodepipelinedNotificationRule:
    Type: 'AWS::CodeStarNotifications::NotificationRule'
    Condition: HasAlertTopic
    Properties:
      Name: !Sub ${CodePipeline}-Notification-Rule
      DetailType: FULL
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeline}"
      EventTypeIds: 
      - codepipeline-pipeline-stage-execution-failed
      - codepipeline-pipeline-pipeline-execution-succeeded
      Targets: 
      - TargetType: SNS 
        TargetAddress: {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
        
Outputs:
  TemplateID:
    Description: 'AWS Cloud Formation template id'
    Value: 'ecs-bg-deploy'
  TemplateVersion:
    Description: 'AWS Cloud Formation template version.'
    Value: '1.0'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
    Export:
      Name: !Sub '${AWS::StackName}-StackName'

  CodeBuildProject:
    Description: 'Name of CodeBuild Project'
    Value: !Ref CodeBuildProject
    Export:
      Name: !Sub '${AWS::StackName}-CodeBuildProject'
  CodeBuildProjectArn:
    Description: 'ARN for CodeBuild Project'
    Value: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}"
    Export:
      Name: !Sub '${AWS::StackName}-CodeBuildProjectArn'
 
  CodePipeline:
    Description: 'Name of CodePipeline'
    Value: !Ref CodePipeline
    Export:
      Name: !Sub '${AWS::StackName}-CodePipeline'
  CodePipelineArn:
    Description: 'ARN for CodePipeline'
    Value: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeline}"
    Export:
      Name: !Sub '${AWS::StackName}-CodePipelineArn'